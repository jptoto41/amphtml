workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "0c7b014ecf0d35d4b0d3c2e8ab5dcf36acfb45bf091b852bf5292f1bfe5c9380",
    strip_prefix = "abseil-cpp-7c17d8bc53d2761b094faed27a04db2fb8df1243",
    urls = ["https://github.com/abseil/abseil-cpp/archive/7c17d8bc53d2761b094faed27a04db2fb8df1243.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "ecb351335da20ab23ea5f14c107a10c475dfdd27d8a50d968757942280dffbe3",
    strip_prefix = "googletest-a7f443b80b105f940225332ed3c31f2790092f47",
    urls = ["https://github.com/google/googletest/archive/a7f443b80b105f940225332ed3c31f2790092f47.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "7c7687b5d16907275d69a8848776537c87535af77d68573e03bd0a52da82c0d8",
    strip_prefix = "protobuf-2eb4d69ed51c475a77ecd62742ef5064557b531f",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/2eb4d69ed51c475a77ecd62742ef5064557b531f.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "4753cbb1e1460d54d03cc1413960a63a46b42c0d691dad45c3f0ce71741d97d6",
    strip_prefix = "gflags-03a4842c9c6aaef438d7bf0c84e8a62c8064992b",
    urls = ["https://github.com/gflags/gflags/archive/03a4842c9c6aaef438d7bf0c84e8a62c8064992b.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "f91f8017b2fff01ecab0ff96d4f520fb2be77a559468082c8f57effe5e9b6442",
    strip_prefix = "re2-33eba105f662c99c8f7d6a264c84ed350bd1dc39",
    urls = ["https://github.com/google/re2/archive/33eba105f662c99c8f7d6a264c84ed350bd1dc39.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "3868eab488bd5be37a6acedbd222a196bea14408a2857916f33cce7b4780897d",
    strip_prefix = "rules_cc-5e848c1434d3458018734238dbc4781f43992ea5",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/5e848c1434d3458018734238dbc4781f43992ea5.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "61374491d059e3314c1535e7e6c741786ebe75bd50c631688ebac5e3e4fde070",
    strip_prefix = "rules_proto-8df2b708c484ba24f95069b3deeb94d38b50f32a",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/8df2b708c484ba24f95069b3deeb94d38b50f32a.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/8df2b708c484ba24f95069b3deeb94d38b50f32a.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "a0ac78c77c711834147711c24a4548f64170c22a140d1bccbc618d64e61cad2a",
    strip_prefix = "emsdk-ca7b40ae222a2d8763b6ac845388744b0e57cfb7/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/ca7b40ae222a2d8763b6ac845388744b0e57cfb7.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "70ef2b4da987bf0d266e663d7c251eac509ff70dd65bba02d41d1e86e840a569",
    strip_prefix = "rules_closure-0.13.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.13.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.13.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
